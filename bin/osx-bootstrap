#!/bin/bash

set -euo pipefail

# install homebrew if not already installed
if ! type "brew" > /dev/null 2>&1; then
  echo "installing homebrew..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

echo "updating brew..."
brew update

# brew taps
# taps=(
#   heroku/brew
# )

# echo "tapping brews..."
# brew tap ${taps[@]}

# install binaries
binaries=(
 bash
 ctags
 fortune
 git
 gh # github cli
 go
 lua
 openssl
 readline
 tmux
 nvim
 gradle
 kotlin-language-server
 yarn
 reattach-to-user-namespace
 svn
 fnm
 fzf
 direnv
 awscli
 fig # command line auto complete
 jq # lightweight json parser
 koekeishiya/formulae/yabai # MacOS window manager
 koekeishiya/formulae/skhd # Simple hotkey daemon for macOS
)

echo "installing binaries..."
brew install ${binaries[@]}

# install cask applications
apps=(
  cmake
  dropbox
  iterm2
  alacritty
  pandoc
  docker
  brave-browser
  1password
  vlc
  google-drive
  adobe-acrobat-reader
  slack
  zoom
  microsoft-teams
  miro
  notion
  postman
  Karabiner-elements # keyboard manager
)

echo "installing applications..."
brew install --cask ${apps[@]}

# configure fzf bindings
$(brew --prefix)/opt/fzf/install --all

# install rust and rust analyzer
echo "installing rust and rust analyzer"
if ! type "rustup" > /dev/null 2>&1; then
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
else
  echo "rustup is already installed."
fi

echo "tapping cask fonts"
brew tap homebrew/cask-fonts

# install fonts
fonts=(
  font-clear-sans
  font-roboto
  font-hack-nerd-font
  font-fantasque-sans-mono-nerd-font
  font-fantasque-sans-mono
)

echo "installing fonts..."
brew install ${fonts[@]}

echo "installing powerline fonts..."
if [ -f "$HOME/Library/Fonts/Inconsolata for Powerline.otf" ]; then
  echo "powerline is fonts already installed."
else
  currentdir=$(pwd)
  cd /tmp
  git clone https://github.com/powerline/fonts.git && cd fonts
  chmod +x install.sh
  ./install.sh
  cd $currentdir
fi

echo "installing nodejs"
fnm install --lts
fnm default lts-latest
echo "$(fnm current)" > ~/.node-version

echo "installing tmux-plugins"
if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi

echo "cleaning up"
rm -rf /tmp/fonts
brew cleanup

echo "setting up mac defaults"
defaults write -g ApplePressAndHoldEnabled -bool true # enable key repeats
defaults write -g InitialKeyRepeat -int 10 # normal minimum is 15 (225 ms)
defaults write -g KeyRepeat -int 1 # normal minimum is 2 (30 ms)

echo "ðŸŽ‰  Done"
