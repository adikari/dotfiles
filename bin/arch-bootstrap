#!/bin/bash

set -euo pipefail

current_dir=$(pwd)
ARCH=$(uname -m)
[ $ARCH = "aarch64" ] && ARCH="arm64"

remove_package() {
  if yay -Qs $1 > /dev/null 2>&1; then
    yay -R --noconfirm $1
  fi
}

if ! command -v yay >/dev/null 2>&1; then
  echo "installing yay"
  cd /tmp
  sudo pacman -S --needed git base-devel && \
    git clone https://aur.archlinux.org/yay.git \
    && cd yay && makepkg -s
fi

packages=(
  cmake
  openssl  
  zsh   
  bash
  openvpn
  curl
  unzip
  tar
  fzf
  ripgrep
  jq
  make
  stow

  # development
  go
  rustup
  aws-cli
  github-cli
  lua
  tmux
  neovim
  yarn
  pnpm

  # desktop environment with i3 
  i3-wm
  i3status
  i3lock
  rofi
  wmctrl
  xautolock
  feh
  picom

  # desktop environment with hyprland
  hyprland-git
  xdg-desktop-portal-hyprland 
  gtk3 
  polkit-gnome 
  pipewire 
  wireplumber 
  wl-clipboard 
  cliphist 
  python-requests 
  pacman-contrib
  mako 
  waybar
  swww 
  swaylock-effects  # not found in aarch64
  wofi 
  wlogout  # not found in aarch64
  swappy 
  grim 
  slurp 
  btop
  mpv
  pamixer 
  pavucontrol 
  brightnessctl 
  bluez 
  bluez-utils 
  blueman 
  network-manager-applet 
  gvfs 
  file-roller
  papirus-icon-theme 
  lxappearance 
  xfce4-settings
  nwg-look-bin # not found in aarch64
  
  sddm
  qt5ct
  qt5-wayland 
  qt5ct
  qt6-wayland 
  qt6ct
  qt5-svg
  qt5-quickcontrols2
  qt5-graphicaleffects
 
   # applications
  aws-vault
  kitty
  docker
  thunderbird
  brave-bin  
  postman-bin
  1password-cli
  thunar 
  thunar-archive-plugin 

  # discord
  # slack

  # fonts
  ttf-fantasque-nerd
  ttf-jetbrains-mono-nerd 
  noto-fonts-emoji 
)

echo "installing packages"
yay -S ${packages[@]} --noconfirm

if ! command -v 1password >/dev/null 2>&1; then
  echo "installing 1password.."
  cd /tmp
  curl -sSO https://downloads.1password.com/linux/tar/stable/$ARCH/1password-latest.tar.gz
  sudo tar -xf 1password-latest.tar.gz
  sudo mkdir -p /opt/1Password
  sudo mv 1password-*/* /opt/1Password
  sudo /opt/1Password/after-install.sh
  cd $current_dir
fi

echo "installing default rust.."
rustup default stable

echo "installing fnm.."
cargo install fnm
fnm install --lts
fnm default lts-latest
[ ! -f ~/.node-version ] && echo "$(fnm current)" > ~/.node-version

echo -e "Starting the Bluetooth Service..."
sudo systemctl enable --now bluetooth.service 
sleep 2

echo -e "Enabling the SDDM Service..."
sudo systemctl enable sddm 
sleep 2

echo -e "Cleaning out conflicting xdg portals..."

remove_package xdg-desktop-portal-gnome 
remove_package xdg-desktop-portal-gtk 

# Copy the SDDM theme
if [ ! -d /usr/share/sddm/themes/sdt ]; then
  echo "Setting up the login screen."
  sudo cp -R extras/sdt /usr/share/sddm/themes/
  sudo chown -R $USER:$USER /usr/share/sddm/themes/sdt
fi

exec sudo systemctl start sddm

echo "ðŸŽ‰  completed arch bootstrap"
