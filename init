#!/bin/bash
set -euo pipefail

XDG_CONFIG_HOME="$HOME/.config"
XDG_DATA_HOME="$HOME/.local/share"
XDG_CACHE_HOME="$HOME/.cache"

log=/tmp/dotfiles.log


# █ █▄░█ █▀ ▀█▀ ▄▀█ █░░ █░░
# █ █░▀█ ▄█ ░█░ █▀█ █▄▄ █▄▄

if [[ "$OSTYPE" == "darwin"* ]]; then
  echo "platform is mac osx. Installing.."
  ./usr/local/bin/osx-bootstrap  | tee -a $log
fi

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  echo "platform is arch. Installing.."
  ./usr/local/bin/arch-bootstrap | tee -a $log 
fi


# █▄░█ █░█ █▀▀ █░█ ▄▀█ █▀▄
# █░▀█ ▀▄▀ █▄▄ █▀█ █▀█ █▄▀

nvim_dir=$XDG_CONFIG_HOME/nvim
if [ ! -d $nvim_dir ]; then 
  echo "setting up nvchad base.." | tee -a $log 
  mkdir -p $nvim_dir
  git clone https://github.com/NvChad/NvChad $nvim_dir --depth 1 | tee -a $log
fi


# █▀▄ █▀█ █▀▀ █▄▀ █▀▀ █▀█
# █▄▀ █▄█ █▄▄ █░█ ██▄ █▀▄

if command -v docker &> /dev/null; then
  echo "setting up docker" | tee -a $log
  sudo groupadd -f docker
  sudo usermod -aG docker $USER

  sudo systemctl enable docker.service
  sudo systemctl enable containerd.service
  sudo systemctl start docker
fi


# █▀ █▀▀ ▀█▀ █░█ █▀█   █▀▄ █▀█ ▀█▀ █▀▀ █ █░░ █▀▀ █▀
# ▄█ ██▄ ░█░ █▄█ █▀▀   █▄▀ █▄█ ░█░ █▀░ █ █▄▄ ██▄ ▄█

echo "setting up dotfiles.." | tee -a $log 
sudo rm -rf $HOME/.zshrc /etc/locale.conf /etc/locale.gen /etc/pam.d/login /etc/pam.d/system-local-login $XDG_CONFIG_HOME/calcurse /etc/zsh/zshenv

stow --target=$HOME home 
stow --target=$XDG_CONFIG_HOME config
sudo stow --target=/etc etc

if [[ "$OSTYPE" == "darwin"* ]]; then
  sudo stow --target=/usr/local/bin --dir=usr/local bin
fi

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  sudo stow --target=/usr usr 
  
  sudo locale-gen | tee -a $log
 
  echo "starting mutt service" | tee -a $log
  systemctl --user enable --now mailsync.timer
  
  echo "starting vdirsyncer service" | tee -a $log
  systemctl --user enable --now vdirsyncer.timer

  echo "starting davmail service" | tee -a $log
  systemctl --user enable --now davmail@subash.adhikari@memories.net

  echo "configuring mailctl" | tee -a $log
  export memories_client_id=$(pass subash.adhikari@memories.net/client_id)
  export memories_client_secret=$(pass subash.adhikari@memories.net/client_secret)
  mkdir -p $HOME/.local/var/mailctl $HOME/.local/var/msmtp
  envsubst <"$HOME/dotfiles/config/mailctl/services-temp" >"$XDG_CONFIG_HOME/mailctl/services.yaml"
  envsubst <"$HOME/dotfiles/config/mailctl/config-temp" >"$XDG_CONFIG_HOME/mailctl/config.yaml"
  
  echo "setting gdrive with rclone" | tee -a $log
  [ ! -d $HOME/gdrive ] && mkdir $HOME/gdrive
  [ ! -d /opt/rclone/logs ] && sudo mkdir -p /opt/rclone/logs
  sudo chmod -R 777 /opt/rclone/logs
  systemctl --user enable rclone
  systemctl --user start rclone &
fi


# █▀▀ █░░ █▀▀ █▀▀ ▀█▀ █▀█ █▀█ █▄░█   █▀▀ █▀█ █▄░█ █▀▀ █ █▀▀
# ██▄ █▄▄ ██▄ █▄▄ ░█░ █▀▄ █▄█ █░▀█   █▄▄ █▄█ █░▀█ █▀░ █ █▄█

electron_versions=(24 25)
for version in ${electron_versions[@]}; do
  file=$XDG_CONFIG_HOME/electron$version-flags.conf
  [ ! -f $file ] && ln -s $HOME/dotfiles/config/electron-flags.conf $file
done


# ▀█▀ █▀▄▀█ █░█ ▀▄▀   █▀█ █░░ █░█ █▀▀ █ █▄░█ █▀
# ░█░ █░▀░█ █▄█ █░█   █▀▀ █▄▄ █▄█ █▄█ █ █░▀█ ▄█

echo "installing tmux plugins" | tee -a $log
if [ ! -d $XDG_CONFIG_HOME/tmux/plugins/tpm ]; then
  git clone https://github.com/tmux-plugins/tpm $XDG_CONFIG_HOME/tmux/plugins/tpm
fi
$XDG_CONFIG_HOME/tmux/plugins/tpm/bin/install_plugins

# echo "install safebox" | tee -a $log
# if [ ! -f /usr/local/bin/safebox ]; then
  # curl -sSL https://raw.githubusercontent.com/monebag/safebox/main/scripts/install.sh | sh
# fi


# █▀▄▀█ █▀█ █▀█ █▀▀   █▀█ ▄▀█ █▀▀ █▄▀ ▄▀█ █▀▀ █▀▀ █▀
# █░▀░█ █▄█ █▀▄ ██▄   █▀▀ █▀█ █▄▄ █░█ █▀█ █▄█ ██▄ ▄█

echo "installing node lts" | tee -a $log
$HOME/.cargo/bin/fnm install --lts
$HOME/.cargo/bin/fnm default lts-latest
[ ! -f ~/.node-version ] && echo "lts-latest" > ~/.node-version



# █▀▄▀█ █ █▀ █▀▀
# █░▀░█ █ ▄█ █▄▄
# 

echo "logging in to github" | tee -a $log
github-login

if [[ $SHELL != *"zsh" ]]; then
  chsh -s $(which zsh)
fi

./usr/local/bin/install-nnn-plugins

echo "all done!!"

exec zsh
